@using System.Data;
@{
    ViewBag.Title = "Alerts";
    ViewBag.Description = "Mantenedor Alertas";
    Layout = "~/Views/Shared/_Default.cshtml";
}

<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">Alertas</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a href="#" data-toggle="collapse">
                        <i class="fa fa-minus"></i>
                    </a>
                    <a href="#" data-toggle="dispose">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            
            <div class="widget-body">
                <form id="togglingForm" action="ConnectTVW" method="post">
                    <table id="expandabledatatable" class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>

                                </th>
                                <th>

                                </th>
                                <th>
                                    Título
                                </th>
                                <th>
                                    Descripción
                                </th>
                                <th>
                                    leído
                                </th>
                                <th>
                                    Leído(Fecha)
                                </th>
                                <th>
                                    Notficado
                                </th>
                                <th>
                                    Notficado(Fecha)
                                </th>
                                <th>
                                    Creado
                                </th>
                                <th>
                                    Editado
                                </th>
                                <th></th>
                            </tr>
                        </thead>

                        <tbody>
                            @{
                                DataTable dt = null;
                                dt = (ViewBag.AlertsById != null) ? (DataTable)ViewBag.AlertsById : null;
                            }

                            @if (dt != null && dt.Rows.Count > 0)
                            {

                                foreach (DataRow dr in dt.Rows)
                                {
                                   
                                    <tr id="@(dr["Id"].ToString())">

                                        <td><input value="@dr["Id"].ToString()" name="Id" hidden="hidden" /><i class="fa fa-plus-square-o row-details"></i></td>
                                        <td><i class="fa fa-warning warning"></i></td>
                                        <td><input value="@dr["Title"].ToString()" name="Title" hidden="hidden"/>@(dr["Title"].ToString())</td>
                                        <td><input value="@dr["Description"].ToString()" name="Description" hidden="hidden" />@(dr["Description"].ToString())</td>
                                        <td>@(dr["Readed"].ToString())</td>
                                        <td>@(dr["ReadedDate"].ToString())</td>
                                        <td>@(dr["Notified"].ToString())</td>
                                        <td>@(dr["NotifiedDate"].ToString())</td>
                                        <td>@(dr["CreatedRecord"].ToString())</td>
                                        <td>@(dr["UpdatedRecord"].ToString().Replace(",", ", "))</td>
                                        
                                        @if (dr["Url"].ToString() != "")
                                        {
                                            <td>
                                                <input value="@dr["Url"].ToString()" name="UrlTVW" hidden="hidden" />
                                                <input value="@dr["IdUserTo"].ToString()" name="IdUserTo" hidden="hidden" />
                                                <input value="@dr["IdUserFrom"].ToString()" name="IdUserFrom" hidden="hidden" />
                                                <button type="submit" formtarget="_blank" class="btn btn-group">Conectar</button>
                                            </td>
                                         }else{
                                            <td></td>
                                        }


                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </form>
            </div>
        </div>
    </div>
</div>


    @*<ul>
        <li>
            <a>
                @{
                    DataTable dt2 = null;
                    dt = (ViewBag.AlertsById != null) ? (DataTable)ViewBag.AlertsById : null;
                }
                @if (dt != null && dt.Rows.Count > 0)
                {

                    foreach (DataRow dr in dt2.Rows)
                    {
                        <div>
                            <span>id = @(dr["Id"].ToString())</span>
                            <span>Título = @(dr["Title"].ToString())</span>
                        </div>
                    }
                }
            </a>
        </li>
    </ul>*@

@section PageScripts{


    <link href="~/assets/css/dataTables.bootstrap.css" rel="stylesheet" />
    <script src="~/assets/js/datatable/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/datatable/ZeroClipboard.js"></script>
    <script src="~/assets/js/datatable/dataTables.tableTools.min.js"></script>
    <script src="~/assets/js/datatable/dataTables.bootstrap.min.js"></script>
    <script src="~/assets/js/bootbox/bootbox.js"></script>
    @{
        var relativeUrl = HttpContext.Current.Request.Url.Segments;
        var url = string.Empty;

        foreach (var item in relativeUrl)
        {
            if (!item.Equals("Index") && !item.Equals("Details"))
            {
                url += item;
            }
            else
            {
                break;
            }
        }
    }
    <script>
        var InitiateExpandableDataTable = function () {
            return {
                init: function () {
                    /*
                    * Initialize DataTables, with no sorting on the 'details' column
                    */
                    var oTable = $('#expandabledatatable').dataTable({
                        "aLengthMenu": [
                               [5, 15, 50, 100, -1],
                               [5, 15, 50, 100, "Todos"]
                        ],
                        "iDisplayLength": 100,
                        "sPaginationType": "bootstrap",
                        "sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
                        "oTableTools": {
                            "aButtons": [
                                {
                                    "sExtends": "copy",
                                    "sButtonText": "Copiar"
                                },
                                {
                                    "sExtends": "collection",
                                    "sButtonText": "Exportar <i class=\"fa fa-angle-down\"></i>",
                                    "aButtons": ["csv", "xls", "pdf"]
                                }
                            ],
                            "sSwfPath": "../assets/swf/copy_csv_xls_pdf.swf"
                        },
                        "language": {
                            "sInfo": "Mostrando _START_ de _END_ de _TOTAL_ registros", //
                            "search": "",
                            "sLengthMenu": "_MENU_",
                            "oPaginate": {
                                "sPrevious": "Anterior",
                                "sNext": "Siguiente"
                            }
                        },
                        "aoColumns": [
                                        { "bSortable": false },
                                        { "bSortable": false },
                                        { "bSortable": true },
                                        { "bSortable": true },
                                        { "bSortable": true },
                                        { "bSortable": true },
                                        { "bSortable": true },
                                        { "bSortable": true },
                                        { "bSortable": true },
                                        { "bSortable": true },
                                        { "bSortable": false }
                        ],
                        "aaSorting": []
                    });
                    ///////////////////////////////////////////////////////

                    /* Formatting function for row details */
                    function fnFormatDetails(oTable, nTr) {
                        var sOut = '';

                        $.ajax({

                            url: '@url/GetUserAlertsAjax?IdAlert=' + nTr.id,
                            type: 'post',
                            dataType: "html",
                            async: false,
                            success: function (_result) {
                                var _objr = JSON.parse(_result);
                                switch (_objr.Flag) {
                                    case jsCore.FlagError:
                                        jsCore.showErrorModal("Error", _objr.ErrorDescription);
                                        break;
                                    default:
                                        var _objAlerts = _objr.ReturnValue;
                                        sOut += '<table>';
                                        var IdAlert = _objAlerts.Id;
                                        var IdUserTo = _objAlerts.IdUserTo;
                                        var Body = _objAlerts.Body;
                                        var Icon = _objAlerts.Icon;
                                        var ExtraIcon = _objAlerts.ExtraIcon;
                                        var ExtraDescription = _objAlerts.ExtraDescription;
                                        var Url = _objAlerts.Url;
                                        var IdUserFrom = _objAlerts.IdUserFrom;
                                        var IdModuleFrom = _objAlerts.IdModuleFrom;
                                        var CreatedRecord = _objAlerts.CreatedRecord;
                                        var UpdatedRecord = _objAlerts.UpdatedRecord;

                                        sOut += '<tr><td>Id Alertas:</td><td>' + _objAlerts.Id;
                                        //if (Id == null) { sOut += '<tr><td>Id Alertas:</td><td>' + " "; } else { sOut += '<tr><td>Id Alertas:</td><td>' + _objAlerts.Id; }
                                        if (IdUserTo == null) { sOut += '<tr><td>Id Usuario:</td><td>' + " "; } else { sOut += '<tr><td>Id Usuario:</td><td>' + _objAlerts.IdUserTo; }
                                        if (Body == null) { sOut += '<tr><td>Mensaje:</td><td>' + " "; } else { sOut += '<tr><td>Mensaje:</td><td>' + _objAlerts.Body; }
                                        if (Icon == null) { sOut += '<tr><td>Icon:</td><td>' + " " } else { sOut += '<tr><td>Icon:</td><td>' + _objAlerts.Icon; }
                                        if (ExtraIcon == null) { sOut += '<tr><td>ExtraIcon:</td><td>' + " " } else { sOut += '<tr><td>ExtraIcon:</td><td>' + _objAlerts.ExtraIcon; }
                                        if (ExtraDescription == null) { sOut += '<tr><td>ExtraDescription</td><td>' + " " } else { sOut += '<tr><td>ExtraDescription</td><td>' + _objAlerts.ExtraDescription; }
                                        if (Url == null) { sOut += '<tr><td>Url:</td><td>' + " " } else { sOut += '<tr><td>Url:</td><td>' + _objAlerts.Url; }
                                        if (IdUserFrom == null) { sOut += '<tr><td>IdUserFrom:</td><td>' + " " } else { sOut += '<tr><td>IdUserFrom:</td><td>' + _objAlerts.IdUserFrom; }
                                        if (IdModuleFrom == null) { sOut += '<tr><td>IdModuleFrom:</td><td>' + " " } else { sOut += '<tr><td>IdModuleFrom:</td><td>' + _objAlerts.IdModuleFrom; }
                                        if (CreatedRecord == null) { sOut += '<tr><td>Fecha Creación:</td><td>' + " " } else { sOut += '<tr><td>Fecha Creación:</td><td>' + _objAlerts.CreatedRecord; }
                                        if (UpdatedRecord == null) { sOut += '<tr><td>Fecha Edición:</td><td>' + " " } else { sOut += '<tr><td>Fecha Edición:</td><td>' + _objAlerts.UpdatedRecord; }
                                        sOut += '</table>';
                                }
                            }
                        });
                        return sOut;
                    }
                    /*
                     * Insert a 'details' column to the table
                     */
                    //var nCloneTh = document.createElement('th');
                    //var nCloneTd = document.createElement('td');
                    //nCloneTd.innerHTML = '<i class="fa fa-plus-square-o row-details"></i>';

                    //$('#expandabledatatable thead tr').each(function () {
                    //    this.insertBefore(nCloneTh, this.childNodes[0]);
                    //});

                    //$('#expandabledatatable tbody tr').each(function () {
                    //    this.insertBefore(nCloneTd.cloneNode(true), this.childNodes[0]);
                    //});

                    $('#expandabledatatable').on('click', ' tbody td .row-details', function () {
                        var nTr = $(this).parents('tr')[0];
                        if (oTable.fnIsOpen(nTr)) {
                            /* This row is already open - close it */
                            $(this).addClass("fa-plus-square-o").removeClass("fa-minus-square-o");
                            oTable.fnClose(nTr);
                        } else {
                            /* Open this row */
                            $(this).addClass("fa-minus-square-o").removeClass("fa-plus-square-o");;
                            //oTable.fnOpen(nTr, fnFormatDetails(oTable, nTr), 'details');
                            oTable.fnOpen(nTr, fnFormatDetails(oTable, nTr), 'details');
                        }
                    });

                    $('#expandabledatatable_column_toggler input[type="checkbox"]').change(function () {
                        var iCol = parseInt($(this).attr("data-column"));
                        var bVis = oTable.fnSettings().aoColumns[iCol].bVisible;
                        oTable.fnSetColumnVis(iCol, (bVis ? false : true));
                    });

                    $('body').on('click', '.dropdown-menu.hold-on-click', function (e) {
                        e.stopPropagation();
                    });
                }
            };
        }();

        InitiateExpandableDataTable.init();

    </script>
}