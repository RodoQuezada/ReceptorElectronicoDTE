@using System.Data;
@{
    ViewBag.Title = "Módulos del sistema";
    ViewBag.Description = "Maestro de módulos del sistema";
    Layout = "~/Views/Shared/_Default.cshtml";
}

<div class="row">
    <div class="col-xs-6 col-md-6">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">Módulos</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a href="#" data-toggle="collapse">
                        <i class="fa fa-minus"></i>
                    </a>
                    <a href="#" data-toggle="dispose">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="widget-body">
                <div class="table-toolbar">
                    @if (User.IsInRole("core_module_insertmodules"))
                                        {
                    <a id="editabledatatable_new" href="javascript:void(0);" class="btn btn-primary">
                        Agregar Módulo
                    </a>
                    }
                </div>
                <table class="table table-striped table-hover table-bordered" id="editabledatatable">
                    <thead>
                        <tr role="row">
                            <th>
                                Nombre del Módulo
                            </th>
                            <th>
                                Descripción del Módulo
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @{
                            DataTable dt = null;
                            dt = (ViewBag.Modules != null) ? (DataTable)ViewBag.Modules : null;
                        }

                        @if (dt != null && dt.Rows.Count > 0)
                        {
                            foreach (DataRow dr in dt.Rows)
                            {
                                <tr id="@(dr["Id"].ToString())">
                                    <td>@(dr["Name"].ToString())</td>
                                    <td>@(dr["Description"].ToString())</td>
                                    <td>
                                        @if (User.IsInRole("core_module_updatemodules"))
                                        {
                                        <a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> Editar</a>
                                        }
                                        @if (User.IsInRole("core_module_deletemodules"))
                                        {
                                        <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> Eliminar</a>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section PageScripts{
    <link href="~/assets/css/dataTables.bootstrap.css" rel="stylesheet" />
    <script src="~/assets/js/datatable/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/datatable/ZeroClipboard.js"></script>
    <script src="~/assets/js/datatable/dataTables.tableTools.min.js"></script>
    <script src="~/assets/js/datatable/dataTables.bootstrap.min.js"></script>
    @{
        var relativeUrl = HttpContext.Current.Request.Url.Segments;
        var url = string.Empty;

        foreach (var item in relativeUrl)
        {
            if (!item.Equals("Index"))
            {
                url += item;
            }
            else
            {
                break;
            }
        }
    }
    <script>
        var InitiateEditableDataTable = function () {
            return {
                init: function () {
                    //Datatable Initiating
                    var oTable = $('#editabledatatable').dataTable({
                        "aLengthMenu": [
                            [5, 15, 20, 100, -1],
                            [5, 15, 20, 100, "Todos"]
                        ],
                        "iDisplayLength": 5,
                        "sPaginationType": "bootstrap",
                        "sDom": "Tflt<'row DTTTFooter'<'col-sm-6'i><'col-sm-6'p>>",
                        "oTableTools": {
                            "aButtons": [
                                {
                                    "sExtends": "copy",
                                    "sButtonText": "Copiar"
                                },
                                {
                                    "sExtends": "collection",
                                    "sButtonText": "Exportar <i class=\"fa fa-angle-down\"></i>",
                                    "aButtons": ["csv", "xls", "pdf"]
                                }
                            ],
                            "sSwfPath": "../assets/swf/copy_csv_xls_pdf.swf"
                        },
                        "language": {
                            "sInfo": "Mostrando _START_ de _END_ de _TOTAL_ registros",
                            "search": "",
                            "sLengthMenu": "_MENU_",
                            "oPaginate": {
                                "sPrevious": "Anterior",
                                "sNext": "Siguiente"
                            }
                        },
                        "aoColumns": [
                            null,
                            null,
                            { "bSortable": false }
                        ]
                    });

                    var isEditing = null;

                    //Add New Row
                    $('#editabledatatable_new').click(function (e) {
                        e.preventDefault();
                        var aiNew = oTable.fnAddData([
                            '',
                            '',
                            '<a href="#" class="btn btn-success btn-xs saveNewRow"><i class="fa fa-edit"></i> Guardar</a> <a href="#" class="btn btn-warning btn-xs cancel" data-mode="new"><i class="fa fa-times"></i> Cancelar</a>'
                        ]);
                        var nRow = oTable.fnGetNodes(aiNew[0]);
                        editAddedRow(oTable, nRow);
                        isEditing = nRow;
                    });

                    //Delete an Existing Row
                    $('#editabledatatable').on("click", 'a.delete', function (e) {
                        e.preventDefault();

                        if (confirm("¿Desea eliminar este Módulo?") == false) {
                            return;
                        }


                        var xModuleId = $(this).parents('tr')[0].id;
                        var nRow = $(this).parents('tr')[0];
                        $.ajax({

                            url: '@url/Delete_Modules?Module=' + xModuleId,
                            type: 'post',
                            dataType: "html",
                            async: false,
                            success: function (Result) {
                                switch (Result.toString()) {
                                    case "0": //Si se ingreso correctamente
                                        oTable.fnDeleteRow(nRow);
                                        alert("El Módulo fue eliminado!");
                                        break;
                                    case "1": // Si Ocurrio un error especifico
                                        alert('Ocurrio una anomalia al procesar su solicitud');
                                        break;
                                    default:  // Cualquier otra situacion
                                        alert(Result);
                                        break;
                                }
                            }
                        });
                    });

                    //Cancel Editing or Adding a Row
                    $('#editabledatatable').on("click", 'a.cancel', function (e) {
                        e.preventDefault();
                        if ($(this).attr("data-mode") == "new") {
                            var nRow = $(this).parents('tr')[0];
                            oTable.fnDeleteRow(nRow);
                            isEditing = null;
                        } else {
                            restoreRow(oTable, isEditing);
                            isEditing = null;
                        }
                    });

                    //Edit A Row
                    $('#editabledatatable').on("click", 'a.edit', function (e) {
                        e.preventDefault();

                        var nRow = $(this).parents('tr')[0];

                        if (isEditing !== null && isEditing != nRow) {
                            restoreRow(oTable, isEditing);
                            editRow(oTable, nRow);
                            isEditing = nRow;

                        } else {
                            editRow(oTable, nRow);
                            isEditing = nRow;
                        }
                    });

                    //Save an Creating Row
                    $('#editabledatatable').on("click", 'a.saveNewRow', function (e) {
                        e.preventDefault();
                        if (this.innerHTML.indexOf("Guardar") >= 0) {
                            saveNewRow(oTable, isEditing);
                            isEditing = null;
                            //Some Code to Highlight Updated Row
                        }
                    });
                    //Save an Editing Row
                    $('#editabledatatable').on("click", 'a.save', function (e) {
                        e.preventDefault();
                        if (this.innerHTML.indexOf("Guardar") >= 0) {
                            saveRow(oTable, isEditing);

                            isEditing = null;
                            //Some Code to Highlight Updated Row
                        }
                    });


                    function restoreRow(oTable, nRow) {
                        var aData = oTable.fnGetData(nRow);
                        var jqTds = $('>td', nRow);

                        for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
                            oTable.fnUpdate(aData[i], nRow, i, false);
                        }

                        oTable.fnDraw();
                    }

                    function editRow(oTable, nRow) {

                        var aData = oTable.fnGetData(nRow);
                        var jqTds = $('>td', nRow);
                        jqTds[0].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[0] + '">';
                        jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';

                        jqTds[2].innerHTML = '<a href="#" class="btn btn-success btn-xs save"><i class="fa fa-save"></i> Guardar</a> <a href="#" class="btn btn-warning btn-xs cancel"><i class="fa fa-times"></i> Cancelar</a>';
                    }

                    function editAddedRow(oTable, nRow) {
                        var aData = oTable.fnGetData(nRow);
                        var jqTds = $('>td', nRow);
                        jqTds[0].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[0] + '">';
                        jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';

                        jqTds[2].innerHTML = aData[2];
                    }

                    //save a change of a existing row and update DB
                    function saveRow(oTable, nRow) {

                        var jqInputs = $('input', nRow);
                        if (jqInputs[0].value.toString().trim() == "") {
                            alert('Debe agregar un nombre');
                            jqInputs[0].focus();
                            return false;
                        }
                        var xModuleId = jqInputs.parents('tr')[0].id;
                        $.ajax({

                            url: '@url/Update_Modules?ModuleId=' + xModuleId + '&ModuleTittle=' + jqInputs[0].value + '&ModuleDescription=' + jqInputs[1].value,
                            type: 'post',
                            dataType: "html",
                            async: false,
                            success: function (Result) {
                                switch (Result.toString()) {
                                    case "1":
                                        alert('Ocurrio una anomalia al procesar su solicitud');
                                        break;
                                    default:
                                        oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                                        oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                                        oTable.fnUpdate('<a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> Editar</a> <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> Eliminar</a>', nRow, 2, false);
                                        oTable.fnDraw();
                                        $(nRow).attr('id', Result);
                                        break;
                                }
                            }
                        });

                    }
                    //save a new row and insert in DB
                    function saveNewRow(oTable, nRow) {

                        var jqInputs = $('input', nRow);
                        if (jqInputs[0].value.toString().trim() == "") {
                            alert('Debe agregar un nombre');
                            jqInputs[0].focus();
                            return false;
                        }
                        $.ajax({

                            url: '@url/Insert_Modules?ModuleTittle=' + jqInputs[0].value + '&ModuleDescription=' + jqInputs[1].value,
                            type: 'post',
                            dataType: "html",
                            async: false,
                            success: function (Result) {
                                switch (Result.toString()) {
                                    case "1":
                                        alert('Ocurrio una anomalia al procesar su solicitud');
                                        break;
                                    default:
                                        oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                                        oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                                        oTable.fnUpdate('<a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> Editar</a> <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> Eliminar</a>', nRow, 2, false);
                                        oTable.fnDraw();
                                        $(nRow).attr('id', Result);
                                        break;
                                }
                            }
                        });
                    }

                    function cancelEditRow(oTable, nRow) {
                        var jqInputs = $('input', nRow);
                        oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                        oTable.fnUpdate('<a href="#" class="btn btn-info btn-xs edit"><i class="fa fa-edit"></i> Editar</a> <a href="#" class="btn btn-danger btn-xs delete"><i class="fa fa-trash-o"></i> Eliminar</a>', nRow, 1, false);
                        oTable.fnDraw();
                    }
                }

            };
        }();

        InitiateEditableDataTable.init();
    </script>
}